{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACnIgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAY;AAChB;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kCAAkC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;AC9H2B;AACA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,wBAAwB;AACxB,qBAAqB;AACrB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB,GAAG;AACnB;AACA,YAAY,4DAAQ;AACpB;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;AChJrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,UAAU;AACV,MAAM,KAAK,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACrB;AACsB;AACD;;;;;;;;;;;;;;;ACpFrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;AC1MtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA,gDAAgD;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;AC/CpB;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC9ErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI,YAAY,WAAW;AACrE;AACA;AACA,6BAA6B;AAC7B;AACA;AACoB;AACI;;;;;;;UC5BxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACA;AACE;AACJ;AACU;AAC5C;AACA;AACA;AACA,cAAc,yDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAI;AACR;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yDAAI;AACR,CAAC","sources":["webpack://smartfood/./js/modules/calc.js","webpack://smartfood/./js/modules/cards.js","webpack://smartfood/./js/modules/forms.js","webpack://smartfood/./js/modules/modal.js","webpack://smartfood/./js/modules/slider.js","webpack://smartfood/./js/modules/tabs.js","webpack://smartfood/./js/modules/timer.js","webpack://smartfood/./js/services/services.js","webpack://smartfood/webpack/bootstrap","webpack://smartfood/webpack/runtime/define property getters","webpack://smartfood/webpack/runtime/hasOwnProperty shorthand","webpack://smartfood/webpack/runtime/make namespace object","webpack://smartfood/./js/script.js"],"sourcesContent":["function calc() {\r\n    //calC\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = '1.375';\r\n        localStorage.setItem('ratio', '1.375');\r\n    }\r\n\r\n    function initLocalSetting(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((elem) => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n\r\n            if (\r\n                elem.getAttribute('data-ratio') ===\r\n                localStorage.getItem('ratio')\r\n            ) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSetting('#gender div', 'calculating__choose-item_active');\r\n    initLocalSetting(\r\n        '.calculating__choose_big div',\r\n        'calculating__choose-item_active'\r\n    );\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____'; // Можете придумать что угодно\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round(\r\n                (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio // +'dwd' NaN === false\r\n            );\r\n        } else {\r\n            result.textContent = Math.round(\r\n                (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\r\n            );\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((elem) => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem(\r\n                        'ratio',\r\n                        +e.target.getAttribute('data-ratio')\r\n                    );\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach((elem) => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation(\r\n        '.calculating__choose_big div',\r\n        'calculating__choose-item_active'\r\n    );\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInformation('#height');\r\n\r\n    getDinamicInformation('#weight');\r\n\r\n    getDinamicInformation('#age');\r\n}\r\n\r\n// module.exports = calc; exs standart\r\n\r\nexport default calc;\r\n","import { getResourses } from '../services/services';\r\n\r\nfunction cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            //надо получить карточки и для этого надо путь src, alt text, title, description and price and all of these will arguments\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; // в классе будет массив\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n            // this.changeToUAH метод будет сработать в конструкторе и дальше в price будет новое значение\r\n        }\r\n\r\n        // сперва будет передаваться аргумента и создаваться верстка\r\n        // и в price придет число и перед тем опубликовать нам надо конвертировать это число\r\n        changeToUAH() {\r\n            this.price = +this.price * this.transfer;\r\n        }\r\n        // чтобы когда этот метод конвертацию делать создаем метод render (для верстки)\r\n        render() {\r\n            const element = document.createElement('div');\r\n            // for dafault argument and operator rest everytime return empty array and we can check if it's empty or not\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach((className) =>\r\n                    element.classList.add(className)\r\n                );\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n        `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    // чтобы когда надо использовать на месте мы пишем, и это потом потеряться может\r\n\r\n    //for gettin from database\r\n\r\n    getResourses('http://localhost:3000/menu').then((data) => {\r\n        ///first method\r\n        data.forEach(({ img, altimg, title, descr, price }) => {\r\n            new MenuCard(\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price,\r\n                '.menu .container'\r\n            ).render();\r\n        });\r\n    });\r\n\r\n    // second method when only one time we append something\r\n\r\n    // getResourses('http://localhost:3000/menu').then((data) => createCard(data));\r\n\r\n    //third method by axios\r\n\r\n    // axios.get('http://localhost:3000/menu').then((data) => {\r\n    //     data.data.forEach(({ img, altimg, title, descr, price }) => {\r\n    //         // data.data что мы обращаемся объекту в в этой библиотеке так устроена\r\n    //         new MenuCard(\r\n    //             img,\r\n    //             altimg,\r\n    //             title,\r\n    //             descr,\r\n    //             price,\r\n    //             '.menu .container'\r\n    //         ).render();\r\n    //     });\r\n    // });\r\n    // function createCard(data) {\r\n    //     data.forEach(({ img, altimg, title, descr, price }) => {\r\n    //         const element = document.createElement('div');\r\n    //         element.classList.add('menu__item');\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //             `;\r\n\r\n    //         document.querySelector('.menu .container').append(element);\r\n    //     });\r\n    // }\r\n    // everything is gotten by server and put inside constructor\r\n\r\n    //each element we call object because inside array there are different array// there are also desctuction\r\n\r\n    // new MenuCard( this in need when we don't work with server\r\n    //     'img/tabs/vegy.jpg',\r\n    //     'vegy',\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     '.menu .container',\r\n    //     'menu__item',\r\n    //     'big'\r\n    // ).render();\r\n\r\n    // const div = new MenuCard();\r\n\r\n    // div.render();\r\n}\r\n\r\nexport default cards;\r\n","import { closeModal, openModal } from './modal';\r\nimport { postData } from '../services/services';\r\n\r\nfunction forms(formSelector, modalTImerId) {\r\n    // send forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так',\r\n    };\r\n\r\n    forms.forEach((item) => {\r\n        bindPostData(item); // shift + F5 чтобы сбросить все данные(kesh)\r\n    });\r\n\r\n    function bindPostData(form) {\r\n        // это связать какой пост данных\r\n        form.addEventListener('submit', (e) => {\r\n            // кнопка в форуме автоматически принимает submit\r\n            e.preventDefault();\r\n\r\n            // let statusMessage = document.createElement('div');\r\n            // statusMessage.classList.add('status');\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;`;\r\n\r\n            // statusMessage.textContent = message.loading;\r\n            // form.append(statusMessage);1 WAY\r\n            // 2 WAY of adding element to page\r\n\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            // const request = new XMLHttpRequest();\r\n\r\n            // request.open('POST', 'server.php');\r\n\r\n            // request.setRequestHeader(\r\n            //     'Content-type',\r\n            //     'application/json; charset=utf-8'\r\n            // ); when use formdata and xmlrequest header we should not use\r\n            // а если наш сервер принимает в json формете то тогда нужет заголовок\r\n            // request.setRequestHeader('Content-type', 'application/json');\r\n\r\n            // в консоли можео делать и медленное 3 g\r\n            const formData = new FormData(form); // автоматически будет взять с форма все данные\r\n            // чтобы formDATA сработала надо в верстке обязательно указать name\"phone or Name\"\r\n\r\n            ///\r\n            // const object = {};\r\n            // formData.forEach(function (value, key) {\r\n            //     object[key] = value;\r\n            // });\r\n            ///\r\n            //instead of this forEach we can do so\r\n            // const json = JSON.stringify(object); // превращает обычный объект в json\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            // for doing array in array from object entries\r\n\r\n            // request.send(formData);\r\n            // request.send(json); // comparison the demand of our servis\r\n\r\n            // request.addEventListener('load', () => {\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         // statusMessage.textContent = message.success;\r\n            //         showThanksModal(message.success);\r\n            //         form.reset(); // чтобы очистить форму.. альтернатив брать инпуты перебрать их и очистить их value\r\n            //         setTimeout(() => {\r\n            //             statusMessage.remove();\r\n            //         }, 2000);\r\n            //     } else {\r\n            //         // statusMessage = message.failure;\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // });\r\n\r\n            // fetch('server.php', {\r\n            //     // если адрес указан не правильно cathc (reject) не будет выполняться. а при отключение интернета будет выполныяться\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-type': 'application/json',\r\n            //     },\r\n            //     body: JSON.stringify(object),\r\n            // }); это код уже старый так как вместо этого существует функция post data\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                // .then((data) => data.text()) // превращаем в обычные текст\r\n                .then((data) => {\r\n                    console.log(data); // data те данные которые возвращаются с promisess\r\n                    showThanksModal(message.success);\r\n\r\n                    statusMessage.remove();\r\n                })\r\n                .catch(() => {\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTImerId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class = \"modal__close\" data-close>&times;</div>\r\n            <div class = \"modal__title\">${message}</div>\r\n        \r\n        \r\n        </div>\r\n        \r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n    // getting database\r\n    //in requests (db.json) будут записываться обращение пользователя когда он отправляем форму с сайта\r\n    // fetch('db.json')\r\n    fetch('http://localhost:3000/menu')\r\n        .then((data) => data.json())\r\n        .then((res) => console.log(res)); // здесь превратиться в обычный js объект\r\n}\r\n\r\nexport default forms;\r\n","function openModal(modalSelector, modalTImerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n    console.log(modalTImerId);\r\n    if (modalTImerId) {\r\n        clearInterval(modalTImerId); // если сам открыл то надо очистить\r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTImerId) {\r\n    /// modal\r\n    //for easily getting from html data-modal add in tag\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n        modal = document.querySelector(modalSelector);\r\n    // modalCloseBtn = document.querySelector('[data-close]');\r\n\r\n    modalTrigger.forEach((btn) => {\r\n        btn.addEventListener('click', () =>\r\n            openModal(modalSelector, modalTImerId)\r\n        ); // for not being called before click, we use arrow function\r\n    });\r\n\r\n    // () => {\r\n    //     modal.classList.add('show');\r\n    //     modal.classList.remove('hide');\r\n    //     // modal.classList.toggle('show');\r\n    //     document.body.style.overflow = 'hidden';\r\n    // });\r\n    // )};\r\n\r\n    // modalCloseBtn.addEventListener('click', closeModal);\r\n\r\n    // закрыть модальное окно кликая на подножку и это modal\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            // чтобы получить атрибут того куда нажимали и закрыть окно\r\n            closeModal(modalSelector); // здесь вызываем потому что надо выполнить после условия\r\n            // modal.classList.add('hide');\r\n            // modal.classList.remove('show');\r\n            // document.body.style.overflow = '';\r\n            // но здесь повторение вверхнего кода это не хорошая практика Do not repeat yourself\r\n        }\r\n    });\r\n\r\n    // esq close the modal// with keydown// keycpde.info we can search all keys code\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    // poping up after 5 sec\r\n\r\n    // task modal will open after certain scrolling\r\n\r\n    function showModalByScroll() {\r\n        if (\r\n            window.pageYOffset + document.documentElement.clientHeight >=\r\n            document.documentElement.scrollHeight\r\n        ) {\r\n            openModal(modalSelector, modalTImerId);\r\n            window.removeEventListener('scroll', showModalByScroll); // то есть как только открылся уже убрать обработчика чтобы больше не открылся\r\n        } // I => pagexoffset прокрученная часть + II => видимая часть на экране = общая высота сайта с учетом прокрутки .. но лучше - 1 для страховки добавитьЫ\r\n    } // { once: true } // чтобы обработчик только раз сработал но это здесь не подходит так акак обработчик на windows\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n    // Используем классы\r\n}\r\n\r\nexport default modal;\r\n\r\nexport { closeModal };\r\nexport { openModal };\r\n","function slider({\r\n    container,\r\n    slide,\r\n    nextArrow,\r\n    prevArrow,\r\n    totalCounter,\r\n    currentCounter,\r\n    wrapper,\r\n    field,\r\n}) {\r\n    // slider\r\n\r\n    const slides = document.querySelectorAll(container),\r\n        slider = document.querySelector(slide),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    // если поставить внутри функции показатель не будет правильным\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transtion = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach((slide) => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n\r\n    indicators.style.cssText = `  position: absolute;\r\n right: 0;\r\n bottom: 0;\r\n left: 0;\r\n z-index: 15;\r\n display: flex;\r\n justify-content: center;\r\n margin-right: 15%;\r\n margin-left: 15%;\r\n list-style: none;`;\r\n\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `  box-sizing: content-box;\r\n     flex: 0 1 auto;\r\n     width: 30px;\r\n     height: 6px;\r\n     margin-right: 3px;\r\n     margin-left: 3px;\r\n     cursor: pointer;\r\n     background-color: #fff;\r\n     background-clip: padding-box;\r\n     border-top: 10px solid transparent;\r\n     border-bottom: 10px solid transparent;\r\n     opacity: .5;\r\n     transition: opacity .6s ease;`;\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n\r\n        dots.push(dot);\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        // if (offset == +width.slice(0, width.length - 2) * (slides.length - 1)) {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            // for removing px from the number we use slice\r\n            offset = 0;\r\n        } else {\r\n            // offset += +width.replace(/\\D/g, '');\r\n            offset += deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach((dot) => (dot.style.opacity = '.5'));\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach((dot) => (dot.style.opacity = '.5'));\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n    // showSlides(slideIndex);\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     // hide others\r\n\r\n    //     slides.forEach((item) => (item.style.display = 'none'));\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides((slideIndex += n));\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n    // second methods of doing slide\r\n\r\n    dots.forEach((dot) => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = +width.slice(0, width.length - 2) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            dots.forEach((dot) => (dot.style.opacity = '.5'));\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;\r\n","function tabs(\r\n    tabSelector,\r\n    tabsContentSelector,\r\n    tabsParentSelector,\r\n    activeClass\r\n) {\r\n    const tabs = document.querySelectorAll(tabSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach((item) => {\r\n            // item.style.display = 'none'; it's not preferable\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach((item) => {\r\n            item.classList.remove(activeClass); // точка не ставится из-за classlist\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        // standart es6 default\r\n        // tabsContent[i].style.display = 'block';\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n\r\n        if (target && target.classList.contains(tabSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;\r\n","function timer(id, deadline) {\r\n    //timer\r\n\r\n    // const deadline = '2023-07-31'; // input с type data возвращает с таким форматом так что лучше привыкать так\r\n    // миллисекунда 1 / 1000 , в 1 сек = 60000\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n\r\n        // get difference between dates\r\n        const t = Date.parse(endtime) - Date.parse(new Date()); // количество милли секунд получаем тоже самое что new Date()\r\n        // можно наверху new Date использовать и без parse\r\n\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            (days = Math.floor(t / (1000 * 60 * 60 * 24))), // Math.floor - это округление до ближащего целого\r\n                (hours = Math.floor(((t / 1000) * 60 * 60) % 24)), // первое скобку общее количество часов получаем\r\n                //а потом делим на 24 и получаем остатку// 50 hours % 24 и вернет всего 2 часа\r\n                (minutes = Math.floor((t / 1000 / 60) % 60)),\r\n                (seconds = Math.floor((t / 1000) % 60));\r\n        }\r\n\r\n        return {\r\n            // чтобы вернуть наружу\r\n\r\n            total: t,\r\n            days: days,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            seconds: seconds,\r\n        };\r\n    }\r\n\r\n    // adding zero to numbers of date\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000); // функция будет запускаться каждую 1 секунду\r\n\r\n        // обновление нашего timer\r\n\r\n        // чтобы не было мигании надо запускать update здесь\r\n        // алгоритм сперва setclock делает переменные, а потом updateClock запускается сразу же а потом setInterval сработает\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime); // t это объект которое возращался с getTimeremaining (return)\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;\r\n","const postData = async (url, data) => {\r\n    // это означает что внутри функции будет асинхронный код\r\n    // во время запроса обработать данных\r\n    const res = await fetch(url, {\r\n        //блогадаря асинхронности код подождет пока выполнится код а потом уж пойдет присваивание\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json', // все будет пока что поститься в формате json\r\n        },\r\n        body: data,\r\n    });\r\n\r\n    return await res.json(); //возвращаем в формате json но чтобы ожидал вернутие надо тоже набрать await\r\n};\r\n\r\nconst getResourses = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    // fetch has limitation that with catch cannot return problem when it's 404 therefore writedown so .ok status\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Couldn't fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json(); // приходит в нормальном формате\r\n};\r\n\r\nexport { postData };\r\nexport { getResourses };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport calc from './modules/calc';\r\nimport { openModal } from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const modalTImerId = setTimeout(\r\n        () => openModal('.modal', modalTImerId),\r\n        10000\r\n    );\r\n    // tab\r\n    // json-server db.json for working with server\r\n\r\n    // const tabs = require('./modules/tabs'),\r\n    //     modal = require('./modules/modal'),\r\n    //     timer = require('./modules/timer'),\r\n    //     cards = require('./modules/cards'),\r\n    //     forms = require('./modules/forms'),\r\n    //     slider = require('./modules/slider'),\r\n    //     calc = require('./modules/calc');\r\n\r\n    // tabs();\r\n    // modal();\r\n    // timer();\r\n    // cards();\r\n    // forms();\r\n    // slider();\r\n    // calc();\r\n\r\n    // es6\r\n\r\n    tabs(\r\n        '.tabheader__item',\r\n        '.tabcontent',\r\n        '.tabheader__items',\r\n        'tabheader__item_active'\r\n    );\r\n    modal('[data-modal]', '.modal', modalTImerId);\r\n    timer('.timer', '2023-06-11');\r\n    cards();\r\n    forms('form', modalTImerId);\r\n    slider({\r\n        container: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slider',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner',\r\n    });\r\n    calc();\r\n});\r\n"],"names":[],"sourceRoot":""}